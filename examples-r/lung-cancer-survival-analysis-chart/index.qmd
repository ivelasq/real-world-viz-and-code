---
title: "Veterans' Administration Lung Cancer Study Survival Analysis Chart"
categories: ["Pharma", "General"]
description: "Using {tidymodels} and {ggsurvfit} to model and visualize time-to-event data."
format: html
---

This code applies survival analysis techniques using tidymodels to analyze time-to-event data and generates visualizations for understanding outcomes over time. Itâ€™s good for use in general or pharma-specific marketing materials that focus on:

- Predictive modeling.
- Data-driven decision-making.
- Data science innovation.
- Highlighting how modern Posit tools like tidymodels can transform complex data into valuable insights.

::: {.callout-note}

The code displayed in gray boxes represents R code, while the text without a background is the output generated by that code. You can use both the code and the output in materials, or feel free to focus only on the R code if it's more relevant.

:::

## Code

```{r}
#| label: survival-analysis
#| message: false
library(tidymodels)
library(censored)
library(ggsurvfit)
library(pec)
tidymodels_prefer()
set.seed(123)

veteran <- survival::veteran

vet <- veteran |>
  mutate(
    event_time = Surv(time),
    .keep = "unused",
    .before = everything()
  )

vet_split <- initial_split(vet)
train_data <- training(vet_split)
test_data  <- testing(vet_split)

proportional_hazards() |>
  set_engine("glmnet")

tree_spec <-
  decision_tree() |>
  set_mode("censored regression")

tree_spec |> 
  fit(event_time ~ ., data = train_data)

tree_fit <-
  workflow(event_time ~ ., tree_spec) |> 
  fit(data = train_data) 

preds <-
  predict(
    tree_fit,
    new_data = test_data,
    type = "survival",
    eval_time = seq(0, 1000, by = 40)
  )

preds |> 
  tidyr::unnest(col = .pred)
```

## Visualizations

```{r}
#| label: survival-analysis-1
#| code-fold: true
survfit(event_time ~ celltype, data = train_data) |>
  ggsurvfit() +
  add_confidence_interval() +
  scale_ggsurvfit() +
  theme_void() +
  theme(legend.position = "none")
```

```{r}
#| label: survival-analysis-2
#| code-fold: true
survfit(event_time ~ prior, 
        data = train_data) |> 
  ggsurvfit() +
  scale_ggsurvfit() +
  theme_void() +
  theme(legend.position = "none")
```